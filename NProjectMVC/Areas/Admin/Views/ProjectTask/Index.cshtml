@model PaginatedList<NProjectMVC.Models.ProjectTask>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<p>
			Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<input type="submit" value="Search" class="btn btn-default" /> |
			<a asp-action="Index">Back to Full List</a>
		</p>
	</div>
</form>
<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<select name="statusSort" asp-items="Html.GetEnumSelectList<Status>()">
			@if (@ViewData["CurrentStatus"] != null)
			{
				Status currentStatus = (Status)Convert.ToInt32(ViewData["CurrentStatus"]);
				<option value="@ViewData["CurrentStatus"]" selected>@currentStatus.ToString()</option>
			}
			else
			{
				<option value="@ViewData["CurrentStatus"]" selected>Choose status</option>
			}
		</select>
		<input type="submit" value="Search" class="btn btn-default" />
	</div>
</form>
@foreach (var item in Model)
{

	<partial name="_TaskItem" model="@item" />
}
@{
	var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-currentStatus="@ViewData["CurrentStatus"]"
   class="btn btn-default @prevDisabled">
	Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-currentStatus="@ViewData["CurrentStatus"]"
   class="btn btn-default @nextDisabled">
	Next
</a>
