@model PaginatedList<NProjectMVC.Models.Project>
@using NProjectMVC.Models.ViewModel;
@{
	ViewData["Title"] = "Index";
	List<ProjectVM> ongoingProjects = new List<ProjectVM>();
	List<ProjectVM> completedProjects = new List<ProjectVM>();
	List<ProjectVM> overtimeProjects = new List<ProjectVM>();
	List<ProjectVM> unstartedProjects = new List<ProjectVM>();
}

<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<p>
			Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<input type="submit" value="Search" class="btn btn-default" /> |
			<a asp-action="Index">Back to Full List</a>
		</p>
	</div>
</form>

<div class="container border-primary">
	@foreach (var item in Model)
	{
		var taskCompleted = 0;
		var totalTask = 0;
		if (item.ProjectTasks != null)
		{
			taskCompleted = item.ProjectTasks.Where(t => t.Status == (int)Status.Complete).Count();
			totalTask = item.ProjectTasks.Count;
		}
		ProjectVM viewModel = new ProjectVM
				{
					Id = item.Id,
					Name = item.Name,
					Deadline = item.Deadline,
					Description = item.Description,
					EstimatedWorkTime = item.EstimatedWorkTime,
					TimeSpent = item.TimeSpent,
					CompletedTask = taskCompleted,
					TotalTask = totalTask
				};
		if(taskCompleted == totalTask)
		{
			completedProjects.Add(viewModel);
		}
		if(taskCompleted < totalTask)
		{
			ongoingProjects.Add(viewModel);
		}
		if(viewModel.Deadline <= DateTime.Now)
		{
			overtimeProjects.Add(viewModel);
		}
		<partial name="_ProjectItem" model="@viewModel" />
	}

</div>



@{
	var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
	Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
	Next
</a>
