@model NProjectMVC.Models.Project

@{
	ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Project</h4>
<hr />
<div class="row d-flex justify-content-between">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="Id" />
			<div class="form-group">
				<label asp-for="Name" class="control-label"></label>
				<input asp-for="Name" class="form-control" />
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Description" class="control-label"></label>
				<input asp-for="Description" class="form-control" />
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Deadline" class="control-label"></label>
				<input asp-for="Deadline" class="form-control" />
				<span asp-validation-for="Deadline" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="EstimatedWorkTime" class="control-label"></label>
				<input asp-for="EstimatedWorkTime" class="form-control" />
				<span asp-validation-for="EstimatedWorkTime" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="TimeSpent" class="control-label"></label>
				<input asp-for="TimeSpent" class="form-control" />
				<span asp-validation-for="TimeSpent" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</form>
	</div>
	<div class="col-md-4">
		<ul class="list-group">
			@foreach (var member in Model.Members)
			{
				<li class="list-group-item"> @member.UserName | <a asp-action="RemoveMember" asp-route-memberId="@member.Id" asp-route-projectId="@Model.Id">Remove</a></li>
			}
		</ul>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

<script>
	function removeItem(event) {
		event.preventDefault(); // Prevent the default behavior of the link
		var listItem = event.target.closest('li'); // Get the closest ancestor <li> of the clicked link
		var list = listItem.parentNode; // Get the parent <ul> of the <li>
		list.removeChild(listItem); // Remove the <li> from the <ul>
	}
</script>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

}
